{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","_React$Component","apply","arguments","_inheritsLoose","prototype","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","React","createElement","Layout","location","SEO","frontmatter","description","excerpt","className","thumbnail","class","Img","fluid","childImageSharp","alt","dangerouslySetInnerHTML","__html","html","Component"],"mappings":"qLAKmC,IAE7BA,EAAgB,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KA8CnB,OA9CmBC,YAAAJ,EAAAC,GAAAD,EAAAK,UACpBC,OAAA,WACE,MAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAEpD,OACEC,IAAAC,cAACC,IAAM,CAACC,SAAUX,KAAKC,MAAMU,SAAUJ,MAAOH,GAC5CI,IAAAC,cAACG,IAAG,CACFL,MAAOR,EAAKc,YAAYN,MACxBO,YAAaf,EAAKc,YAAYC,aAAef,EAAKgB,UAEpDP,IAAAC,cAAA,WACEO,UAAS,iBAAkBjB,EAAKc,YAAYI,WAAS,aAErDT,IAAAC,cAAA,UAAQO,UAAU,uBAChBR,IAAAC,cAAA,MAAIO,UAAU,sBAAsBjB,EAAKc,YAAYN,QAGtDR,EAAKc,YAAYC,aAChBN,IAAAC,cAAA,KAAGS,MAAM,wBAAwBnB,EAAKc,YAAYC,aAGnDf,EAAKc,YAAYI,WAChBT,IAAAC,cAAA,OAAKO,UAAU,sBACbR,IAAAC,cAACU,IAAG,CACFH,UAAU,WACVI,MAAOrB,EAAKc,YAAYI,UAAUI,gBAAgBD,MAClDE,IAAKvB,EAAKc,YAAYN,SAK5BC,IAAAC,cAAA,OACEO,UAAU,oBACVO,wBAAyB,CAAEC,OAAQzB,EAAK0B,QAG1CjB,IAAAC,cAAA,UAAQO,UAAU,2BASzBxB,EA9CmB,CAASgB,IAAMkB,WAiDtBlC","file":"component---src-templates-blog-post-js-f9def46e75fdaed0efda.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nclass BlogPostTemplate extends React.Component {\r\n  render() {\r\n    const post = this.props.data.markdownRemark\r\n    const siteTitle = this.props.data.site.siteMetadata.title\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO\r\n          title={post.frontmatter.title}\r\n          description={post.frontmatter.description || post.excerpt}\r\n        />\r\n        <article\r\n          className={`post-content ${post.frontmatter.thumbnail || `no-image`}`}\r\n        >\r\n          <header className=\"post-content-header\">\r\n            <h1 className=\"post-content-title\">{post.frontmatter.title}</h1>\r\n          </header>\r\n\r\n          {post.frontmatter.description && (\r\n            <p class=\"post-content-excerpt\">{post.frontmatter.description}</p>\r\n          )}\r\n\r\n          {post.frontmatter.thumbnail && (\r\n            <div className=\"post-content-image\">\r\n              <Img\r\n                className=\"kg-image\"\r\n                fluid={post.frontmatter.thumbnail.childImageSharp.fluid}\r\n                alt={post.frontmatter.title}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div\r\n            className=\"post-content-body\"\r\n            dangerouslySetInnerHTML={{ __html: post.html }}\r\n          />\r\n\r\n          <footer className=\"post-content-footer\">\r\n            {/* There are two options for how we display the byline/author-info.\r\n        If the post has more than one author, we load a specific template\r\n        from includes/byline-multiple.hbs, otherwise, we just use the\r\n        default byline. */}\r\n          </footer>\r\n        </article>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n        thumbnail {\r\n          childImageSharp {\r\n            fluid(maxWidth: 1360) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}